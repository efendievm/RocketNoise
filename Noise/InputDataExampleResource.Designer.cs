//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Noise {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class InputDataExampleResource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal InputDataExampleResource() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Noise.InputDataExampleResource", typeof(InputDataExampleResource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;EngineNoiseInputData&gt;
        ///  &lt;Thrust&gt;136035&lt;/Thrust&gt;
        ///  &lt;FlowParameters MassFlow=&quot;51,6596&quot; NozzleDiameter=&quot;0,38285&quot; NozzleMachNumber=&quot;3,0524&quot; NozzleFlowVelocity=&quot;2764,28&quot; ChamberSoundVelocity=&quot;1113&quot; NozzleAdiabaticIndex=&quot;1,1954&quot; /&gt;
        ///  &lt;ContourParaneters Width=&quot;100&quot; Height=&quot;100&quot; NozzleCoordinate=&quot;20&quot; MinSoundLevel=&quot;125&quot; MaxSoundLevel=&quot;150&quot; /&gt;
        ///&lt;/EngineNoiseInputData&gt;.
        /// </summary>
        internal static string EngineAcoustics {
            get {
                return ResourceManager.GetString("EngineAcoustics", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;FireTestNoiseInputData&gt;
        ///  &lt;Thrust&gt;136035&lt;/Thrust&gt;
        ///  &lt;FlowParameters MassFlow=&quot;51,6596&quot; NozzleDiameter=&quot;0,38285&quot; NozzleMachNumber=&quot;3,0524&quot; NozzleFlowVelocity=&quot;2764,28&quot; ChamberSoundVelocity=&quot;1113&quot; NozzleAdiabaticIndex=&quot;1,1954&quot; /&gt;
        ///  &lt;WeatherParameters&gt;
        ///    &lt;Январь Humidity=&quot;83&quot; Temperature=&quot;263,7&quot; /&gt;
        ///    &lt;Февраль Humidity=&quot;82&quot; Temperature=&quot;266,9&quot; /&gt;
        ///    &lt;Март Humidity=&quot;76&quot; Temperature=&quot;270,7&quot; /&gt;
        ///    &lt;Апрель Humidity=&quot;68&quot; Temperature=&quot;278,8&quot; /&gt;
        ///    &lt;Май Humidity=&quot;59&quot; Temperature=&quot;287&quot; /&gt;
        ///    &lt;Июнь Hum [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string FireTest {
            get {
                return ResourceManager.GetString("FireTest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;FireTestNoiseInputData&gt;
        ///  &lt;Thrust&gt;136035&lt;/Thrust&gt;
        ///  &lt;FlowParameters MassFlow=&quot;51,6596&quot; NozzleDiameter=&quot;0,38285&quot; NozzleMachNumber=&quot;3,0524&quot; NozzleFlowVelocity=&quot;2764,28&quot; ChamberSoundVelocity=&quot;1113&quot; NozzleAdiabaticIndex=&quot;1,1954&quot; /&gt;
        ///  &lt;WeatherParameters&gt;
        ///    &lt;Январь Humidity=&quot;83&quot; Temperature=&quot;263,7&quot; /&gt;
        ///    &lt;Февраль Humidity=&quot;82&quot; Temperature=&quot;266,9&quot; /&gt;
        ///    &lt;Март Humidity=&quot;76&quot; Temperature=&quot;270,7&quot; /&gt;
        ///    &lt;Апрель Humidity=&quot;68&quot; Temperature=&quot;278,8&quot; /&gt;
        ///    &lt;Май Humidity=&quot;59&quot; Temperature=&quot;287&quot; /&gt;
        ///    &lt;Июнь Hum [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string FireTestInfra {
            get {
                return ResourceManager.GetString("FireTestInfra", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;FireTestNoiseInputData&gt;
        ///  &lt;Thrust&gt;136035&lt;/Thrust&gt;
        ///  &lt;FlowParameters MassFlow=&quot;51,6596&quot; NozzleDiameter=&quot;0,38285&quot; NozzleMachNumber=&quot;3,0524&quot; NozzleFlowVelocity=&quot;2764,28&quot; ChamberSoundVelocity=&quot;1113&quot; NozzleAdiabaticIndex=&quot;1,1954&quot; /&gt;
        ///  &lt;WeatherParameters&gt;
        ///    &lt;Январь Humidity=&quot;83&quot; Temperature=&quot;263,7&quot; /&gt;
        ///    &lt;Февраль Humidity=&quot;82&quot; Temperature=&quot;266,9&quot; /&gt;
        ///    &lt;Март Humidity=&quot;76&quot; Temperature=&quot;270,7&quot; /&gt;
        ///    &lt;Апрель Humidity=&quot;68&quot; Temperature=&quot;278,8&quot; /&gt;
        ///    &lt;Май Humidity=&quot;59&quot; Temperature=&quot;287&quot; /&gt;
        ///    &lt;Июнь Hum [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string FireTestUltra {
            get {
                return ResourceManager.GetString("FireTestUltra", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;FlightNoiseInputData&gt;
        ///  &lt;RocketBallistics&gt;
        ///    &lt;Moment Time=&quot;0&quot; Thrust=&quot;776480&quot; Distance=&quot;0&quot; Height=&quot;187,94&quot; /&gt;
        ///    &lt;Moment Time=&quot;1&quot; Thrust=&quot;1040450&quot; Distance=&quot;0&quot; Height=&quot;188,85&quot; /&gt;
        ///    &lt;Moment Time=&quot;2&quot; Thrust=&quot;1040500&quot; Distance=&quot;0,01&quot; Height=&quot;192,97&quot; /&gt;
        ///    &lt;Moment Time=&quot;3&quot; Thrust=&quot;1040580&quot; Distance=&quot;0,03&quot; Height=&quot;200,55&quot; /&gt;
        ///    &lt;Moment Time=&quot;4&quot; Thrust=&quot;1040690&quot; Distance=&quot;0,07&quot; Height=&quot;211,66&quot; /&gt;
        ///    &lt;Moment Time=&quot;5&quot; Thrust=&quot;1040850&quot; Distance=&quot;0,12&quot; Height=&quot;226,36&quot; /&gt;
        ///    &lt;Moment Time=&quot;6&quot; Thrust=&quot; [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string FlightNoise {
            get {
                return ResourceManager.GetString("FlightNoise", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;FlightNoiseInputData&gt;
        ///  &lt;RocketBallistics&gt;
        ///    &lt;Moment Time=&quot;0&quot; Thrust=&quot;776480&quot; Distance=&quot;0&quot; Height=&quot;187,94&quot; /&gt;
        ///    &lt;Moment Time=&quot;1&quot; Thrust=&quot;1040450&quot; Distance=&quot;0&quot; Height=&quot;188,85&quot; /&gt;
        ///    &lt;Moment Time=&quot;2&quot; Thrust=&quot;1040500&quot; Distance=&quot;0,01&quot; Height=&quot;192,97&quot; /&gt;
        ///    &lt;Moment Time=&quot;3&quot; Thrust=&quot;1040580&quot; Distance=&quot;0,03&quot; Height=&quot;200,55&quot; /&gt;
        ///    &lt;Moment Time=&quot;4&quot; Thrust=&quot;1040690&quot; Distance=&quot;0,07&quot; Height=&quot;211,66&quot; /&gt;
        ///    &lt;Moment Time=&quot;5&quot; Thrust=&quot;1040850&quot; Distance=&quot;0,12&quot; Height=&quot;226,36&quot; /&gt;
        ///    &lt;Moment Time=&quot;6&quot; Thrust=&quot; [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string FlightNoiseInfra {
            get {
                return ResourceManager.GetString("FlightNoiseInfra", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;FlightNoiseInputData&gt;
        ///  &lt;RocketBallistics&gt;
        ///    &lt;Moment Time=&quot;0&quot; Thrust=&quot;776480&quot; Distance=&quot;0&quot; Height=&quot;187,94&quot; /&gt;
        ///    &lt;Moment Time=&quot;1&quot; Thrust=&quot;1040450&quot; Distance=&quot;0&quot; Height=&quot;188,85&quot; /&gt;
        ///    &lt;Moment Time=&quot;2&quot; Thrust=&quot;1040500&quot; Distance=&quot;0,01&quot; Height=&quot;192,97&quot; /&gt;
        ///    &lt;Moment Time=&quot;3&quot; Thrust=&quot;1040580&quot; Distance=&quot;0,03&quot; Height=&quot;200,55&quot; /&gt;
        ///    &lt;Moment Time=&quot;4&quot; Thrust=&quot;1040690&quot; Distance=&quot;0,07&quot; Height=&quot;211,66&quot; /&gt;
        ///    &lt;Moment Time=&quot;5&quot; Thrust=&quot;1040850&quot; Distance=&quot;0,12&quot; Height=&quot;226,36&quot; /&gt;
        ///    &lt;Moment Time=&quot;6&quot; Thrust=&quot; [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string FlightNoiseUltra {
            get {
                return ResourceManager.GetString("FlightNoiseUltra", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;SonicBoomInputData&gt;
        ///  &lt;RocketBallisticsPath&gt;
        ///    &lt;Moment Time=&quot;420&quot; MachNumber=&quot;4,63&quot; Distance=&quot;237,89&quot; Height=&quot;89248,83&quot; /&gt;
        ///    &lt;Moment Time=&quot;425&quot; MachNumber=&quot;4,72&quot; Distance=&quot;266,49&quot; Height=&quot;82786,64&quot; /&gt;
        ///    &lt;Moment Time=&quot;430&quot; MachNumber=&quot;4,74&quot; Distance=&quot;297,27&quot; Height=&quot;76085,51&quot; /&gt;
        ///    &lt;Moment Time=&quot;435&quot; MachNumber=&quot;4,73&quot; Distance=&quot;330,37&quot; Height=&quot;69145,28&quot; /&gt;
        ///    &lt;Moment Time=&quot;440&quot; MachNumber=&quot;4,68&quot; Distance=&quot;365,93&quot; Height=&quot;61966,43&quot; /&gt;
        ///    &lt;Moment Time=&quot;445&quot; MachNumber=&quot;4,64&quot; Distance=&quot;404,1&quot; H [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string SonicBoom {
            get {
                return ResourceManager.GetString("SonicBoom", resourceCulture);
            }
        }
    }
}
